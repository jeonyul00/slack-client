{"version":3,"file":"256.js","mappings":"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","sources":["webpack://slack-client/./pages/Channel/styles.tsx","webpack://slack-client/./pages/Channel/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n\n  & .header-right {\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n","import ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Container, Header, DragOver } from '@pages/Channel/styles';\nimport { IChannel, IChat, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport makeSection from '@utils/makeSection';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\n\nconst Channel = () => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const { data: myData } = useSWR('/api/users', fetcher);\n  const [chat, onChangeChat, setChat] = useInput('');\n  const { data: channelData } = useSWR<IChannel>(`/api/workspaces/${workspace}/channels/${channel}`, fetcher);\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IChat[]>(\n    (index) => `/api/workspaces/${workspace}/channels/${channel}/chats?perPage=20&page=${index + 1}`,\n    fetcher,\n  );\n  const { data: channelMembersData } = useSWR<IUser[]>(\n    myData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false;\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [dragOver, setDragOver] = useState(false);\n\n  const onSubmitForm = useCallback(\n    (e: SubmitEvent) => {\n      e.preventDefault();\n      if (chat?.trim() && chatData && channelData) {\n        const savedChat = chat;\n        mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: savedChat,\n            UserId: myData.id,\n            User: myData,\n            ChannelId: channelData.id,\n            Channel: channelData,\n            createdAt: new Date(),\n          });\n          return prevChatData;\n        }, false).then(() => {\n          setChat('');\n          scrollbarRef.current?.scrollToBottom();\n        });\n        axios\n          .post(`/api/workspaces/${workspace}/channels/${channel}/chats`, {\n            content: chat,\n          })\n          .catch(console.error);\n      }\n    },\n    [chat, chatData, myData, channelData, workspace, channel],\n  );\n\n  const onMessage = useCallback(\n    (data: IChat) => {\n      if (data.Channel.name === channel && (data.content.startsWith('uploads\\\\') || data.UserId !== myData?.id)) {\n        mutateChat((chatData) => {\n          chatData?.[0].unshift(data);\n          return chatData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 50);\n            }\n          }\n        });\n      }\n    },\n    [channel, myData],\n  );\n\n  useEffect(() => {\n    socket?.on('message', onMessage);\n    return () => {\n      socket?.off('message', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    if (chatData?.length === 1) {\n      console.log('toBottomWhenLoaded', scrollbarRef.current);\n      setTimeout(() => {\n        console.log('scrollbar', scrollbarRef.current);\n        scrollbarRef.current?.scrollToBottom();\n      }, 500);\n    }\n  }, [chatData]);\n\n  const onClickInviteChannel = useCallback(() => {\n    setShowInviteChannelModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const onChangeFile = useCallback((e: any) => {\n    const formData = new FormData();\n    if (e.target.files) {\n      for (let i = 0; i < e.target.files.length; i++) {\n        const file = e.target.files[i].getAsFile();\n        console.log('... file[' + i + '].name = ' + file.name);\n        formData.append('image', file);\n      }\n    }\n    axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {});\n  }, []);\n\n  const onDrop = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      console.log(e);\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            formData.append('image', file);\n          }\n        }\n      } else {\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          console.log(e, '... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {\n        setDragOver(false);\n      });\n    },\n    [workspace, channel],\n  );\n\n  const onDragOver = useCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    console.log(e);\n    setDragOver(true);\n  }, []);\n\n  if (!myData) {\n    return null;\n  }\n\n  const chatSections = makeSection(chatData ? chatData.flat().reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\n      <Header>\n        <span>#{channel}</span>\n        <div className=\"header-right\">\n          <span>{channelMembersData?.length}</span>\n          <button\n            onClick={onClickInviteChannel}\n            className=\"c-button-unstyled p-ia__view_header__button\"\n            aria-label=\"Add people to #react-native\"\n            data-sk=\"tooltip_parent\"\n            type=\"button\"\n          >\n            <i className=\"c-icon p-ia__view_header__button_icon c-icon--add-user\" aria-hidden=\"true\" />\n          </button>\n        </div>\n      </Header>\n      <ChatList\n        chatSections={chatSections}\n        ref={scrollbarRef}\n        setSize={setSize}\n        isReachingEnd={isReachingEnd}\n        isEmpty={isEmpty}\n      />\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n      {dragOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default Channel;\n"],"names":["Container","_styled","target","name","styles","Header","DragOver","_chatData$","_chatData","_useParams","useParams","workspace","channel","myData","useSWR","fetcher","data","_useInput2","_slicedToArray","useInput","chat","onChangeChat","setChat","channelData","concat","_useSWRInfinite","useSWRInfinite","index","chatData","mutateChat","mutate","setSize","channelMembersData","socket","useSocket","isEmpty","length","isReachingEnd","scrollbarRef","useRef","_useState2","useState","showInviteChannelModal","setShowInviteChannelModal","_useState4","dragOver","setDragOver","onSubmitForm","useCallback","e","preventDefault","trim","savedChat","prevChatData","_chatData$0$","unshift","id","content","UserId","User","ChannelId","Channel","createdAt","Date","then","_scrollbarRef$current","current","scrollToBottom","axios","catch","console","error","onMessage","startsWith","_scrollbarRef$current2","getScrollHeight","getClientHeight","getScrollTop","log","getValues","setTimeout","_scrollbarRef$current3","useEffect","on","off","_scrollbarRef$current4","onClickInviteChannel","onCloseModal","onDrop","formData","FormData","files","i","file","getAsFile","append","dataTransfer","items","kind","onDragOver","chatSections","makeSection","flat","reverse","React","className","onClick","type","ChatList","ref","ChatBox","InviteChannelModal","show"],"sourceRoot":""}